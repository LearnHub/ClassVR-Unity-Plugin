// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: avn/connect/v1/licenses.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Avn.Connect.V1 {

  /// <summary>Holder for reflection information generated from avn/connect/v1/licenses.proto</summary>
  public static partial class LicensesReflection {

    #region Descriptor
    /// <summary>File descriptor for avn/connect/v1/licenses.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LicensesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1hdm4vY29ubmVjdC92MS9saWNlbnNlcy5wcm90bxIOYXZuLmNvbm5lY3Qu",
            "djEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aImF2bi9jb25u",
            "ZWN0L3YxL2F1dGhvcml6YXRpb24ucHJvdG8aHWF2bi9jb25uZWN0L3YxL3Bh",
            "cnRuZXJzLnByb3RvIvwCCgtMaWNlbnNlSW5mbxIXCgpsaWNlbnNlX2lkGAEg",
            "ASgJSAGIAQESEgoKcGxhbl9jb2RlcxgCIAMoCRITCgljbGllbnRfaWQYAyAB",
            "KAlIABIRCgd1c2VyX2lkGAQgASgFSAASGQoPb3JnYW5pemF0aW9uX2lkGAUg",
            "ASgFSAASOQoPcGFydG5lcl9zZXNzaW9uGAYgASgLMh4uYXZuLmNvbm5lY3Qu",
            "djEuUGFydG5lclNlc3Npb25IABIfChVhdXRoZW50aWNhdGVkX3VzZXJfaWQY",
            "ByABKAVIABIRCgdwYXNzX2lkGAggASgJSAASEQoHY29udGV4dBgJIAEoCUgA",
            "Eh4KFHVzZXJfb3JnYW5pemF0aW9uX2lkGAogASgFSAASMAoHZXhwaXJlcxgU",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIAogBAUIICgZzb3Vy",
            "Y2VCDQoLX2xpY2Vuc2VfaWRCCgoIX2V4cGlyZXNKBAgLEBQiVgoWR2V0VXNl",
            "ckxpY2Vuc2VzUmVxdWVzdBIrCgRhdXRoGAEgASgLMh0uYXZuLmNvbm5lY3Qu",
            "djEuQXV0aG9yaXphdGlvbhIPCgd1c2VyX2lkGAIgASgFIkgKF0dldFVzZXJM",
            "aWNlbnNlc1Jlc3BvbnNlEi0KCGxpY2Vuc2VzGAEgAygLMhsuYXZuLmNvbm5l",
            "Y3QudjEuTGljZW5zZUluZm8ydAoOTGljZW5zZVNlcnZpY2USYgoPR2V0VXNl",
            "ckxpY2Vuc2VzEiYuYXZuLmNvbm5lY3QudjEuR2V0VXNlckxpY2Vuc2VzUmVx",
            "dWVzdBonLmF2bi5jb25uZWN0LnYxLkdldFVzZXJMaWNlbnNlc1Jlc3BvbnNl",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Avn.Connect.V1.AuthorizationReflection.Descriptor, global::Avn.Connect.V1.PartnersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Avn.Connect.V1.LicenseInfo), global::Avn.Connect.V1.LicenseInfo.Parser, new[]{ "LicenseId", "PlanCodes", "ClientId", "UserId", "OrganizationId", "PartnerSession", "AuthenticatedUserId", "PassId", "Context", "UserOrganizationId", "Expires" }, new[]{ "Source", "LicenseId", "Expires" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Avn.Connect.V1.GetUserLicensesRequest), global::Avn.Connect.V1.GetUserLicensesRequest.Parser, new[]{ "Auth", "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Avn.Connect.V1.GetUserLicensesResponse), global::Avn.Connect.V1.GetUserLicensesResponse.Parser, new[]{ "Licenses" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LicenseInfo : pb::IMessage<LicenseInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LicenseInfo> _parser = new pb::MessageParser<LicenseInfo>(() => new LicenseInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LicenseInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avn.Connect.V1.LicensesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LicenseInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LicenseInfo(LicenseInfo other) : this() {
      licenseId_ = other.licenseId_;
      planCodes_ = other.planCodes_.Clone();
      expires_ = other.expires_ != null ? other.expires_.Clone() : null;
      switch (other.SourceCase) {
        case SourceOneofCase.ClientId:
          ClientId = other.ClientId;
          break;
        case SourceOneofCase.UserId:
          UserId = other.UserId;
          break;
        case SourceOneofCase.OrganizationId:
          OrganizationId = other.OrganizationId;
          break;
        case SourceOneofCase.PartnerSession:
          PartnerSession = other.PartnerSession.Clone();
          break;
        case SourceOneofCase.AuthenticatedUserId:
          AuthenticatedUserId = other.AuthenticatedUserId;
          break;
        case SourceOneofCase.PassId:
          PassId = other.PassId;
          break;
        case SourceOneofCase.Context:
          Context = other.Context;
          break;
        case SourceOneofCase.UserOrganizationId:
          UserOrganizationId = other.UserOrganizationId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LicenseInfo Clone() {
      return new LicenseInfo(this);
    }

    /// <summary>Field number for the "license_id" field.</summary>
    public const int LicenseIdFieldNumber = 1;
    private readonly static string LicenseIdDefaultValue = "";

    private string licenseId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LicenseId {
      get { return licenseId_ ?? LicenseIdDefaultValue; }
      set {
        licenseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "license_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLicenseId {
      get { return licenseId_ != null; }
    }
    /// <summary>Clears the value of the "license_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLicenseId() {
      licenseId_ = null;
    }

    /// <summary>Field number for the "plan_codes" field.</summary>
    public const int PlanCodesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_planCodes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> planCodes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PlanCodes {
      get { return planCodes_; }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 3;
    /// <summary>
    /// Client license
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return HasClientId ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.ClientId;
      }
    }
    /// <summary>Gets whether the "client_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientId {
      get { return sourceCase_ == SourceOneofCase.ClientId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "client_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientId() {
      if (HasClientId) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    /// <summary>
    /// Licenses that are allocated to the user directly (currently only via Zoho email matching) 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { return HasUserId ? (int) source_ : 0; }
      set {
        source_ = value;
        sourceCase_ = SourceOneofCase.UserId;
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return sourceCase_ == SourceOneofCase.UserId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "user_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      if (HasUserId) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "organization_id" field.</summary>
    public const int OrganizationIdFieldNumber = 5;
    /// <summary>
    /// Organization assigned license (will be the ID of the licensee organization, not the channel library organization)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OrganizationId {
      get { return HasOrganizationId ? (int) source_ : 0; }
      set {
        source_ = value;
        sourceCase_ = SourceOneofCase.OrganizationId;
      }
    }
    /// <summary>Gets whether the "organization_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOrganizationId {
      get { return sourceCase_ == SourceOneofCase.OrganizationId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "organization_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOrganizationId() {
      if (HasOrganizationId) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "partner_session" field.</summary>
    public const int PartnerSessionFieldNumber = 6;
    /// <summary>
    /// Partner allocated license
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Avn.Connect.V1.PartnerSession PartnerSession {
      get { return sourceCase_ == SourceOneofCase.PartnerSession ? (global::Avn.Connect.V1.PartnerSession) source_ : null; }
      set {
        source_ = value;
        sourceCase_ = value == null ? SourceOneofCase.None : SourceOneofCase.PartnerSession;
      }
    }

    /// <summary>Field number for the "authenticated_user_id" field.</summary>
    public const int AuthenticatedUserIdFieldNumber = 7;
    /// <summary>
    /// Dimensions created by authenticated users have additional privileges and allow access to user playlist activities
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AuthenticatedUserId {
      get { return HasAuthenticatedUserId ? (int) source_ : 0; }
      set {
        source_ = value;
        sourceCase_ = SourceOneofCase.AuthenticatedUserId;
      }
    }
    /// <summary>Gets whether the "authenticated_user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAuthenticatedUserId {
      get { return sourceCase_ == SourceOneofCase.AuthenticatedUserId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "authenticated_user_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthenticatedUserId() {
      if (HasAuthenticatedUserId) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "pass_id" field.</summary>
    public const int PassIdFieldNumber = 8;
    /// <summary>
    /// Hall pass license apply to content only
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PassId {
      get { return HasPassId ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.PassId;
      }
    }
    /// <summary>Gets whether the "pass_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassId {
      get { return sourceCase_ == SourceOneofCase.PassId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "pass_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassId() {
      if (HasPassId) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 9;
    /// <summary>
    /// Dimension context (anything relating to how the dimension was created, e.g. 'common' plan codes that apply to all dimensions)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Context {
      get { return HasContext ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Context;
      }
    }
    /// <summary>Gets whether the "context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContext {
      get { return sourceCase_ == SourceOneofCase.Context; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "context" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContext() {
      if (HasContext) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "user_organization_id" field.</summary>
    public const int UserOrganizationIdFieldNumber = 10;
    /// <summary>
    /// Additional organization to license, currently passed through from ClassVR Player
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserOrganizationId {
      get { return HasUserOrganizationId ? (int) source_ : 0; }
      set {
        source_ = value;
        sourceCase_ = SourceOneofCase.UserOrganizationId;
      }
    }
    /// <summary>Gets whether the "user_organization_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserOrganizationId {
      get { return sourceCase_ == SourceOneofCase.UserOrganizationId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "user_organization_id" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserOrganizationId() {
      if (HasUserOrganizationId) {
        ClearSource();
      }
    }

    /// <summary>Field number for the "expires" field.</summary>
    public const int ExpiresFieldNumber = 20;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expires_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expires {
      get { return expires_; }
      set {
        expires_ = value;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      ClientId = 3,
      UserId = 4,
      OrganizationId = 5,
      PartnerSession = 6,
      AuthenticatedUserId = 7,
      PassId = 8,
      Context = 9,
      UserOrganizationId = 10,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LicenseInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LicenseInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LicenseId != other.LicenseId) return false;
      if(!planCodes_.Equals(other.planCodes_)) return false;
      if (ClientId != other.ClientId) return false;
      if (UserId != other.UserId) return false;
      if (OrganizationId != other.OrganizationId) return false;
      if (!object.Equals(PartnerSession, other.PartnerSession)) return false;
      if (AuthenticatedUserId != other.AuthenticatedUserId) return false;
      if (PassId != other.PassId) return false;
      if (Context != other.Context) return false;
      if (UserOrganizationId != other.UserOrganizationId) return false;
      if (!object.Equals(Expires, other.Expires)) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLicenseId) hash ^= LicenseId.GetHashCode();
      hash ^= planCodes_.GetHashCode();
      if (HasClientId) hash ^= ClientId.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasOrganizationId) hash ^= OrganizationId.GetHashCode();
      if (sourceCase_ == SourceOneofCase.PartnerSession) hash ^= PartnerSession.GetHashCode();
      if (HasAuthenticatedUserId) hash ^= AuthenticatedUserId.GetHashCode();
      if (HasPassId) hash ^= PassId.GetHashCode();
      if (HasContext) hash ^= Context.GetHashCode();
      if (HasUserOrganizationId) hash ^= UserOrganizationId.GetHashCode();
      if (expires_ != null) hash ^= Expires.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLicenseId) {
        output.WriteRawTag(10);
        output.WriteString(LicenseId);
      }
      planCodes_.WriteTo(output, _repeated_planCodes_codec);
      if (HasClientId) {
        output.WriteRawTag(26);
        output.WriteString(ClientId);
      }
      if (HasUserId) {
        output.WriteRawTag(32);
        output.WriteInt32(UserId);
      }
      if (HasOrganizationId) {
        output.WriteRawTag(40);
        output.WriteInt32(OrganizationId);
      }
      if (sourceCase_ == SourceOneofCase.PartnerSession) {
        output.WriteRawTag(50);
        output.WriteMessage(PartnerSession);
      }
      if (HasAuthenticatedUserId) {
        output.WriteRawTag(56);
        output.WriteInt32(AuthenticatedUserId);
      }
      if (HasPassId) {
        output.WriteRawTag(66);
        output.WriteString(PassId);
      }
      if (HasContext) {
        output.WriteRawTag(74);
        output.WriteString(Context);
      }
      if (HasUserOrganizationId) {
        output.WriteRawTag(80);
        output.WriteInt32(UserOrganizationId);
      }
      if (expires_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Expires);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLicenseId) {
        output.WriteRawTag(10);
        output.WriteString(LicenseId);
      }
      planCodes_.WriteTo(ref output, _repeated_planCodes_codec);
      if (HasClientId) {
        output.WriteRawTag(26);
        output.WriteString(ClientId);
      }
      if (HasUserId) {
        output.WriteRawTag(32);
        output.WriteInt32(UserId);
      }
      if (HasOrganizationId) {
        output.WriteRawTag(40);
        output.WriteInt32(OrganizationId);
      }
      if (sourceCase_ == SourceOneofCase.PartnerSession) {
        output.WriteRawTag(50);
        output.WriteMessage(PartnerSession);
      }
      if (HasAuthenticatedUserId) {
        output.WriteRawTag(56);
        output.WriteInt32(AuthenticatedUserId);
      }
      if (HasPassId) {
        output.WriteRawTag(66);
        output.WriteString(PassId);
      }
      if (HasContext) {
        output.WriteRawTag(74);
        output.WriteString(Context);
      }
      if (HasUserOrganizationId) {
        output.WriteRawTag(80);
        output.WriteInt32(UserOrganizationId);
      }
      if (expires_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Expires);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLicenseId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LicenseId);
      }
      size += planCodes_.CalculateSize(_repeated_planCodes_codec);
      if (HasClientId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (HasOrganizationId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrganizationId);
      }
      if (sourceCase_ == SourceOneofCase.PartnerSession) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PartnerSession);
      }
      if (HasAuthenticatedUserId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AuthenticatedUserId);
      }
      if (HasPassId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PassId);
      }
      if (HasContext) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (HasUserOrganizationId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserOrganizationId);
      }
      if (expires_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Expires);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LicenseInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasLicenseId) {
        LicenseId = other.LicenseId;
      }
      planCodes_.Add(other.planCodes_);
      if (other.expires_ != null) {
        if (expires_ == null) {
          Expires = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expires.MergeFrom(other.Expires);
      }
      switch (other.SourceCase) {
        case SourceOneofCase.ClientId:
          ClientId = other.ClientId;
          break;
        case SourceOneofCase.UserId:
          UserId = other.UserId;
          break;
        case SourceOneofCase.OrganizationId:
          OrganizationId = other.OrganizationId;
          break;
        case SourceOneofCase.PartnerSession:
          if (PartnerSession == null) {
            PartnerSession = new global::Avn.Connect.V1.PartnerSession();
          }
          PartnerSession.MergeFrom(other.PartnerSession);
          break;
        case SourceOneofCase.AuthenticatedUserId:
          AuthenticatedUserId = other.AuthenticatedUserId;
          break;
        case SourceOneofCase.PassId:
          PassId = other.PassId;
          break;
        case SourceOneofCase.Context:
          Context = other.Context;
          break;
        case SourceOneofCase.UserOrganizationId:
          UserOrganizationId = other.UserOrganizationId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LicenseId = input.ReadString();
            break;
          }
          case 18: {
            planCodes_.AddEntriesFrom(input, _repeated_planCodes_codec);
            break;
          }
          case 26: {
            ClientId = input.ReadString();
            break;
          }
          case 32: {
            UserId = input.ReadInt32();
            break;
          }
          case 40: {
            OrganizationId = input.ReadInt32();
            break;
          }
          case 50: {
            global::Avn.Connect.V1.PartnerSession subBuilder = new global::Avn.Connect.V1.PartnerSession();
            if (sourceCase_ == SourceOneofCase.PartnerSession) {
              subBuilder.MergeFrom(PartnerSession);
            }
            input.ReadMessage(subBuilder);
            PartnerSession = subBuilder;
            break;
          }
          case 56: {
            AuthenticatedUserId = input.ReadInt32();
            break;
          }
          case 66: {
            PassId = input.ReadString();
            break;
          }
          case 74: {
            Context = input.ReadString();
            break;
          }
          case 80: {
            UserOrganizationId = input.ReadInt32();
            break;
          }
          case 162: {
            if (expires_ == null) {
              Expires = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expires);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LicenseId = input.ReadString();
            break;
          }
          case 18: {
            planCodes_.AddEntriesFrom(ref input, _repeated_planCodes_codec);
            break;
          }
          case 26: {
            ClientId = input.ReadString();
            break;
          }
          case 32: {
            UserId = input.ReadInt32();
            break;
          }
          case 40: {
            OrganizationId = input.ReadInt32();
            break;
          }
          case 50: {
            global::Avn.Connect.V1.PartnerSession subBuilder = new global::Avn.Connect.V1.PartnerSession();
            if (sourceCase_ == SourceOneofCase.PartnerSession) {
              subBuilder.MergeFrom(PartnerSession);
            }
            input.ReadMessage(subBuilder);
            PartnerSession = subBuilder;
            break;
          }
          case 56: {
            AuthenticatedUserId = input.ReadInt32();
            break;
          }
          case 66: {
            PassId = input.ReadString();
            break;
          }
          case 74: {
            Context = input.ReadString();
            break;
          }
          case 80: {
            UserOrganizationId = input.ReadInt32();
            break;
          }
          case 162: {
            if (expires_ == null) {
              Expires = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expires);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetUserLicensesRequest : pb::IMessage<GetUserLicensesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserLicensesRequest> _parser = new pb::MessageParser<GetUserLicensesRequest>(() => new GetUserLicensesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserLicensesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avn.Connect.V1.LicensesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserLicensesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserLicensesRequest(GetUserLicensesRequest other) : this() {
      auth_ = other.auth_ != null ? other.auth_.Clone() : null;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserLicensesRequest Clone() {
      return new GetUserLicensesRequest(this);
    }

    /// <summary>Field number for the "auth" field.</summary>
    public const int AuthFieldNumber = 1;
    private global::Avn.Connect.V1.Authorization auth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Avn.Connect.V1.Authorization Auth {
      get { return auth_; }
      set {
        auth_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserLicensesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserLicensesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Auth, other.Auth)) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (auth_ != null) hash ^= Auth.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (auth_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Auth);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (auth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Auth);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserLicensesRequest other) {
      if (other == null) {
        return;
      }
      if (other.auth_ != null) {
        if (auth_ == null) {
          Auth = new global::Avn.Connect.V1.Authorization();
        }
        Auth.MergeFrom(other.Auth);
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::Avn.Connect.V1.Authorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (auth_ == null) {
              Auth = new global::Avn.Connect.V1.Authorization();
            }
            input.ReadMessage(Auth);
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetUserLicensesResponse : pb::IMessage<GetUserLicensesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUserLicensesResponse> _parser = new pb::MessageParser<GetUserLicensesResponse>(() => new GetUserLicensesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetUserLicensesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Avn.Connect.V1.LicensesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserLicensesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserLicensesResponse(GetUserLicensesResponse other) : this() {
      licenses_ = other.licenses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetUserLicensesResponse Clone() {
      return new GetUserLicensesResponse(this);
    }

    /// <summary>Field number for the "licenses" field.</summary>
    public const int LicensesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Avn.Connect.V1.LicenseInfo> _repeated_licenses_codec
        = pb::FieldCodec.ForMessage(10, global::Avn.Connect.V1.LicenseInfo.Parser);
    private readonly pbc::RepeatedField<global::Avn.Connect.V1.LicenseInfo> licenses_ = new pbc::RepeatedField<global::Avn.Connect.V1.LicenseInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Avn.Connect.V1.LicenseInfo> Licenses {
      get { return licenses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetUserLicensesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetUserLicensesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!licenses_.Equals(other.licenses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= licenses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      licenses_.WriteTo(output, _repeated_licenses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      licenses_.WriteTo(ref output, _repeated_licenses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += licenses_.CalculateSize(_repeated_licenses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetUserLicensesResponse other) {
      if (other == null) {
        return;
      }
      licenses_.Add(other.licenses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            licenses_.AddEntriesFrom(ref input, _repeated_licenses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
